OIDC_PROVIDER=$(aws eks describe-cluster --name missael-hire-project --region us-east-1 --query "cluster.identity.oidc.issuer" --output text | sed -e "s/^https:\/\///")

9e99a48a9960b14926bb7f3b02e22da2b0ab7280

aws eks update-kubeconfig --region us-east-1 --name missael-hire-project
cat $HOME/.kube/config
kubectl create namespace missael

kubectl create -f service_account.yaml
kubectl annotate serviceaccount -n missael missael-service-account eks.amazonaws.com/role-arn=arn:aws:iam::734647218919:role/missael-hire-project-s3

kubectl get all

│ An error occurred (InvalidIdentityToken) when calling the AssumeRoleWithWebIdentity operation: OpenIDConnect provider's HTTPS certificate doesn't match configured thumbprint         │
https://github.com/terraform-aws-modules/terraform-aws-eks/issues/2542#issuecomment-1505921443
Error fixed recreating manually the OIDC


kubectl apply -f proxy.yaml -n missael
kubectl apply -f proxy_service.yaml -n missael

helm template -n missael missael-hire-project . -f ./values.yaml --debug
helm upgrade -n missael missael-hire-project . --install -f ./values.yaml

kubectl config view --raw >~/.kube/config

helm install aws-load-balancer-controller eks/aws-load-balancer-controller -n kube-system --set clusterName=missael-hire-project --set serviceAccount.create=false --set serviceAccount.name=aws-load-balancer-controller



========
ALB
https://docs.aws.amazon.com/es_es/eks/latest/userguide/aws-load-balancer-controller.html

[sandbox][sandbox][sandbox][sandbox][sandbox][sandbox]missaelhr@MHERNANDEZ-ROSADO-L3YK4FX077 alb % aws iam create-policy \
    --policy-name AWSLoadBalancerControllerIAMPolicy \
    --policy-document file://iam_policy.json
{
    "Policy": {
        "PolicyName": "AWSLoadBalancerControllerIAMPolicy",
        "PolicyId": "ANPA2WDDC6LTYZEV3GBFQ",
        "Arn": "arn:aws:iam::734647218919:policy/AWSLoadBalancerControllerIAMPolicy",
        "Path": "/",
        "DefaultVersionId": "v1",
        "AttachmentCount": 0,
        "PermissionsBoundaryUsageCount": 0,
        "IsAttachable": true,
        "CreateDate": "2024-01-10T23:57:41+00:00",
        "UpdateDate": "2024-01-10T23:57:41+00:00"
    }
}

export oidc_id=$(aws eks describe-cluster --name missael-hire-project --region us-east-1 --query "cluster.identity.oidc.issuer" --output text | cut -d '/' -f 5)
Value = 6B72866FDE39D76D6FECBC97C31314EA

[sandbox][sandbox][sandbox][sandbox][sandbox][sandbox]missaelhr@MHERNANDEZ-ROSADO-L3YK4FX077 alb % aws iam create-role \
  --role-name AmazonEKSLoadBalancerControllerRole \
  --assume-role-policy-document file://"load-balancer-role-trust-policy.json"

{
    "Role": {
        "Path": "/",
        "RoleName": "AmazonEKSLoadBalancerControllerRole",
        "RoleId": "AROA2WDDC6LTZT2YKKKPJ",
        "Arn": "arn:aws:iam::734647218919:role/AmazonEKSLoadBalancerControllerRole",
        "CreateDate": "2024-01-11T00:06:49+00:00",
        "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Effect": "Allow",
                    "Principal": {
                        "Federated": "arn:aws:iam::734647218919:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/6B72866FDE39D76D6FECBC97C31314EA"
                    },
                    "Action": "sts:AssumeRoleWithWebIdentity",
                    "Condition": {
                        "StringEquals": {
                            "oidc.eks.region-code.amazonaws.com/id/6B72866FDE39D76D6FECBC97C31314EA:aud": "sts.amazonaws.com",
                            "oidc.eks.region-code.amazonaws.com/id/6B72866FDE39D76D6FECBC97C31314EA:sub": "system:serviceaccount:kube-system:aws-load-balancer-controller"
                        }
                    }
                }
            ]
        }
    }
}


aws iam attach-role-policy \
  --policy-arn arn:aws:iam::734647218919:policy/AWSLoadBalancerControllerIAMPolicy \
  --role-name AmazonEKSLoadBalancerControllerRole

[sandbox][sandbox][sandbox][sandbox][sandbox][sandbox]missaelhr@MHERNANDEZ-ROSADO-L3YK4FX077 alb % kubectl apply -f v2_5_4_full.yaml
customresourcedefinition.apiextensions.k8s.io/ingressclassparams.elbv2.k8s.aws created
customresourcedefinition.apiextensions.k8s.io/targetgroupbindings.elbv2.k8s.aws created
role.rbac.authorization.k8s.io/aws-load-balancer-controller-leader-election-role created
clusterrole.rbac.authorization.k8s.io/aws-load-balancer-controller-role created
rolebinding.rbac.authorization.k8s.io/aws-load-balancer-controller-leader-election-rolebinding created
clusterrolebinding.rbac.authorization.k8s.io/aws-load-balancer-controller-rolebinding created
service/aws-load-balancer-webhook-service created
deployment.apps/aws-load-balancer-controller created
certificate.cert-manager.io/aws-load-balancer-serving-cert created
issuer.cert-manager.io/aws-load-balancer-selfsigned-issuer created
mutatingwebhookconfiguration.admissionregistration.k8s.io/aws-load-balancer-webhook created
validatingwebhookconfiguration.admissionregistration.k8s.io/aws-load-balancer-webhook created


[sandbox][sandbox][sandbox][sandbox][sandbox][sandbox]missaelhr@MHERNANDEZ-ROSADO-L3YK4FX077 alb % kubectl apply -f v2_5_4_ingclass.yaml
ingressclassparams.elbv2.k8s.aws/alb created
ingressclass.networking.k8s.io/alb created
